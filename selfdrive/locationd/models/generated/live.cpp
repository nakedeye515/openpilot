#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4936451531631853074) {
   out_4936451531631853074[0] = 0;
   out_4936451531631853074[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4936451531631853074[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4936451531631853074[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4936451531631853074[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4936451531631853074[5] = -sin(in_vec[1]);
   out_4936451531631853074[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4936451531631853074[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4936451531631853074[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4936451531631853074[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4936451531631853074[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4936451531631853074[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4936451531631853074[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4936451531631853074[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4936451531631853074[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4936451531631853074[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4936451531631853074[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4936451531631853074[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1355019412731270491) {
   out_1355019412731270491[0] = delta_x[0] + nom_x[0];
   out_1355019412731270491[1] = delta_x[1] + nom_x[1];
   out_1355019412731270491[2] = delta_x[2] + nom_x[2];
   out_1355019412731270491[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1355019412731270491[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1355019412731270491[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1355019412731270491[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1355019412731270491[7] = delta_x[6] + nom_x[7];
   out_1355019412731270491[8] = delta_x[7] + nom_x[8];
   out_1355019412731270491[9] = delta_x[8] + nom_x[9];
   out_1355019412731270491[10] = delta_x[9] + nom_x[10];
   out_1355019412731270491[11] = delta_x[10] + nom_x[11];
   out_1355019412731270491[12] = delta_x[11] + nom_x[12];
   out_1355019412731270491[13] = delta_x[12] + nom_x[13];
   out_1355019412731270491[14] = delta_x[13] + nom_x[14];
   out_1355019412731270491[15] = delta_x[14] + nom_x[15];
   out_1355019412731270491[16] = delta_x[15] + nom_x[16];
   out_1355019412731270491[17] = delta_x[16] + nom_x[17];
   out_1355019412731270491[18] = delta_x[17] + nom_x[18];
   out_1355019412731270491[19] = delta_x[18] + nom_x[19];
   out_1355019412731270491[20] = delta_x[19] + nom_x[20];
   out_1355019412731270491[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3724306521271248657) {
   out_3724306521271248657[0] = -nom_x[0] + true_x[0];
   out_3724306521271248657[1] = -nom_x[1] + true_x[1];
   out_3724306521271248657[2] = -nom_x[2] + true_x[2];
   out_3724306521271248657[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3724306521271248657[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3724306521271248657[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3724306521271248657[6] = -nom_x[7] + true_x[7];
   out_3724306521271248657[7] = -nom_x[8] + true_x[8];
   out_3724306521271248657[8] = -nom_x[9] + true_x[9];
   out_3724306521271248657[9] = -nom_x[10] + true_x[10];
   out_3724306521271248657[10] = -nom_x[11] + true_x[11];
   out_3724306521271248657[11] = -nom_x[12] + true_x[12];
   out_3724306521271248657[12] = -nom_x[13] + true_x[13];
   out_3724306521271248657[13] = -nom_x[14] + true_x[14];
   out_3724306521271248657[14] = -nom_x[15] + true_x[15];
   out_3724306521271248657[15] = -nom_x[16] + true_x[16];
   out_3724306521271248657[16] = -nom_x[17] + true_x[17];
   out_3724306521271248657[17] = -nom_x[18] + true_x[18];
   out_3724306521271248657[18] = -nom_x[19] + true_x[19];
   out_3724306521271248657[19] = -nom_x[20] + true_x[20];
   out_3724306521271248657[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4479928638218003069) {
   out_4479928638218003069[0] = 1.0;
   out_4479928638218003069[1] = 0;
   out_4479928638218003069[2] = 0;
   out_4479928638218003069[3] = 0;
   out_4479928638218003069[4] = 0;
   out_4479928638218003069[5] = 0;
   out_4479928638218003069[6] = 0;
   out_4479928638218003069[7] = 0;
   out_4479928638218003069[8] = 0;
   out_4479928638218003069[9] = 0;
   out_4479928638218003069[10] = 0;
   out_4479928638218003069[11] = 0;
   out_4479928638218003069[12] = 0;
   out_4479928638218003069[13] = 0;
   out_4479928638218003069[14] = 0;
   out_4479928638218003069[15] = 0;
   out_4479928638218003069[16] = 0;
   out_4479928638218003069[17] = 0;
   out_4479928638218003069[18] = 0;
   out_4479928638218003069[19] = 0;
   out_4479928638218003069[20] = 0;
   out_4479928638218003069[21] = 0;
   out_4479928638218003069[22] = 1.0;
   out_4479928638218003069[23] = 0;
   out_4479928638218003069[24] = 0;
   out_4479928638218003069[25] = 0;
   out_4479928638218003069[26] = 0;
   out_4479928638218003069[27] = 0;
   out_4479928638218003069[28] = 0;
   out_4479928638218003069[29] = 0;
   out_4479928638218003069[30] = 0;
   out_4479928638218003069[31] = 0;
   out_4479928638218003069[32] = 0;
   out_4479928638218003069[33] = 0;
   out_4479928638218003069[34] = 0;
   out_4479928638218003069[35] = 0;
   out_4479928638218003069[36] = 0;
   out_4479928638218003069[37] = 0;
   out_4479928638218003069[38] = 0;
   out_4479928638218003069[39] = 0;
   out_4479928638218003069[40] = 0;
   out_4479928638218003069[41] = 0;
   out_4479928638218003069[42] = 0;
   out_4479928638218003069[43] = 0;
   out_4479928638218003069[44] = 1.0;
   out_4479928638218003069[45] = 0;
   out_4479928638218003069[46] = 0;
   out_4479928638218003069[47] = 0;
   out_4479928638218003069[48] = 0;
   out_4479928638218003069[49] = 0;
   out_4479928638218003069[50] = 0;
   out_4479928638218003069[51] = 0;
   out_4479928638218003069[52] = 0;
   out_4479928638218003069[53] = 0;
   out_4479928638218003069[54] = 0;
   out_4479928638218003069[55] = 0;
   out_4479928638218003069[56] = 0;
   out_4479928638218003069[57] = 0;
   out_4479928638218003069[58] = 0;
   out_4479928638218003069[59] = 0;
   out_4479928638218003069[60] = 0;
   out_4479928638218003069[61] = 0;
   out_4479928638218003069[62] = 0;
   out_4479928638218003069[63] = 0;
   out_4479928638218003069[64] = 0;
   out_4479928638218003069[65] = 0;
   out_4479928638218003069[66] = -0.5*state[4];
   out_4479928638218003069[67] = -0.5*state[5];
   out_4479928638218003069[68] = -0.5*state[6];
   out_4479928638218003069[69] = 0;
   out_4479928638218003069[70] = 0;
   out_4479928638218003069[71] = 0;
   out_4479928638218003069[72] = 0;
   out_4479928638218003069[73] = 0;
   out_4479928638218003069[74] = 0;
   out_4479928638218003069[75] = 0;
   out_4479928638218003069[76] = 0;
   out_4479928638218003069[77] = 0;
   out_4479928638218003069[78] = 0;
   out_4479928638218003069[79] = 0;
   out_4479928638218003069[80] = 0;
   out_4479928638218003069[81] = 0;
   out_4479928638218003069[82] = 0;
   out_4479928638218003069[83] = 0;
   out_4479928638218003069[84] = 0;
   out_4479928638218003069[85] = 0;
   out_4479928638218003069[86] = 0;
   out_4479928638218003069[87] = 0.5*state[3];
   out_4479928638218003069[88] = 0.5*state[6];
   out_4479928638218003069[89] = -0.5*state[5];
   out_4479928638218003069[90] = 0;
   out_4479928638218003069[91] = 0;
   out_4479928638218003069[92] = 0;
   out_4479928638218003069[93] = 0;
   out_4479928638218003069[94] = 0;
   out_4479928638218003069[95] = 0;
   out_4479928638218003069[96] = 0;
   out_4479928638218003069[97] = 0;
   out_4479928638218003069[98] = 0;
   out_4479928638218003069[99] = 0;
   out_4479928638218003069[100] = 0;
   out_4479928638218003069[101] = 0;
   out_4479928638218003069[102] = 0;
   out_4479928638218003069[103] = 0;
   out_4479928638218003069[104] = 0;
   out_4479928638218003069[105] = 0;
   out_4479928638218003069[106] = 0;
   out_4479928638218003069[107] = 0;
   out_4479928638218003069[108] = -0.5*state[6];
   out_4479928638218003069[109] = 0.5*state[3];
   out_4479928638218003069[110] = 0.5*state[4];
   out_4479928638218003069[111] = 0;
   out_4479928638218003069[112] = 0;
   out_4479928638218003069[113] = 0;
   out_4479928638218003069[114] = 0;
   out_4479928638218003069[115] = 0;
   out_4479928638218003069[116] = 0;
   out_4479928638218003069[117] = 0;
   out_4479928638218003069[118] = 0;
   out_4479928638218003069[119] = 0;
   out_4479928638218003069[120] = 0;
   out_4479928638218003069[121] = 0;
   out_4479928638218003069[122] = 0;
   out_4479928638218003069[123] = 0;
   out_4479928638218003069[124] = 0;
   out_4479928638218003069[125] = 0;
   out_4479928638218003069[126] = 0;
   out_4479928638218003069[127] = 0;
   out_4479928638218003069[128] = 0;
   out_4479928638218003069[129] = 0.5*state[5];
   out_4479928638218003069[130] = -0.5*state[4];
   out_4479928638218003069[131] = 0.5*state[3];
   out_4479928638218003069[132] = 0;
   out_4479928638218003069[133] = 0;
   out_4479928638218003069[134] = 0;
   out_4479928638218003069[135] = 0;
   out_4479928638218003069[136] = 0;
   out_4479928638218003069[137] = 0;
   out_4479928638218003069[138] = 0;
   out_4479928638218003069[139] = 0;
   out_4479928638218003069[140] = 0;
   out_4479928638218003069[141] = 0;
   out_4479928638218003069[142] = 0;
   out_4479928638218003069[143] = 0;
   out_4479928638218003069[144] = 0;
   out_4479928638218003069[145] = 0;
   out_4479928638218003069[146] = 0;
   out_4479928638218003069[147] = 0;
   out_4479928638218003069[148] = 0;
   out_4479928638218003069[149] = 0;
   out_4479928638218003069[150] = 0;
   out_4479928638218003069[151] = 0;
   out_4479928638218003069[152] = 0;
   out_4479928638218003069[153] = 1.0;
   out_4479928638218003069[154] = 0;
   out_4479928638218003069[155] = 0;
   out_4479928638218003069[156] = 0;
   out_4479928638218003069[157] = 0;
   out_4479928638218003069[158] = 0;
   out_4479928638218003069[159] = 0;
   out_4479928638218003069[160] = 0;
   out_4479928638218003069[161] = 0;
   out_4479928638218003069[162] = 0;
   out_4479928638218003069[163] = 0;
   out_4479928638218003069[164] = 0;
   out_4479928638218003069[165] = 0;
   out_4479928638218003069[166] = 0;
   out_4479928638218003069[167] = 0;
   out_4479928638218003069[168] = 0;
   out_4479928638218003069[169] = 0;
   out_4479928638218003069[170] = 0;
   out_4479928638218003069[171] = 0;
   out_4479928638218003069[172] = 0;
   out_4479928638218003069[173] = 0;
   out_4479928638218003069[174] = 0;
   out_4479928638218003069[175] = 1.0;
   out_4479928638218003069[176] = 0;
   out_4479928638218003069[177] = 0;
   out_4479928638218003069[178] = 0;
   out_4479928638218003069[179] = 0;
   out_4479928638218003069[180] = 0;
   out_4479928638218003069[181] = 0;
   out_4479928638218003069[182] = 0;
   out_4479928638218003069[183] = 0;
   out_4479928638218003069[184] = 0;
   out_4479928638218003069[185] = 0;
   out_4479928638218003069[186] = 0;
   out_4479928638218003069[187] = 0;
   out_4479928638218003069[188] = 0;
   out_4479928638218003069[189] = 0;
   out_4479928638218003069[190] = 0;
   out_4479928638218003069[191] = 0;
   out_4479928638218003069[192] = 0;
   out_4479928638218003069[193] = 0;
   out_4479928638218003069[194] = 0;
   out_4479928638218003069[195] = 0;
   out_4479928638218003069[196] = 0;
   out_4479928638218003069[197] = 1.0;
   out_4479928638218003069[198] = 0;
   out_4479928638218003069[199] = 0;
   out_4479928638218003069[200] = 0;
   out_4479928638218003069[201] = 0;
   out_4479928638218003069[202] = 0;
   out_4479928638218003069[203] = 0;
   out_4479928638218003069[204] = 0;
   out_4479928638218003069[205] = 0;
   out_4479928638218003069[206] = 0;
   out_4479928638218003069[207] = 0;
   out_4479928638218003069[208] = 0;
   out_4479928638218003069[209] = 0;
   out_4479928638218003069[210] = 0;
   out_4479928638218003069[211] = 0;
   out_4479928638218003069[212] = 0;
   out_4479928638218003069[213] = 0;
   out_4479928638218003069[214] = 0;
   out_4479928638218003069[215] = 0;
   out_4479928638218003069[216] = 0;
   out_4479928638218003069[217] = 0;
   out_4479928638218003069[218] = 0;
   out_4479928638218003069[219] = 1.0;
   out_4479928638218003069[220] = 0;
   out_4479928638218003069[221] = 0;
   out_4479928638218003069[222] = 0;
   out_4479928638218003069[223] = 0;
   out_4479928638218003069[224] = 0;
   out_4479928638218003069[225] = 0;
   out_4479928638218003069[226] = 0;
   out_4479928638218003069[227] = 0;
   out_4479928638218003069[228] = 0;
   out_4479928638218003069[229] = 0;
   out_4479928638218003069[230] = 0;
   out_4479928638218003069[231] = 0;
   out_4479928638218003069[232] = 0;
   out_4479928638218003069[233] = 0;
   out_4479928638218003069[234] = 0;
   out_4479928638218003069[235] = 0;
   out_4479928638218003069[236] = 0;
   out_4479928638218003069[237] = 0;
   out_4479928638218003069[238] = 0;
   out_4479928638218003069[239] = 0;
   out_4479928638218003069[240] = 0;
   out_4479928638218003069[241] = 1.0;
   out_4479928638218003069[242] = 0;
   out_4479928638218003069[243] = 0;
   out_4479928638218003069[244] = 0;
   out_4479928638218003069[245] = 0;
   out_4479928638218003069[246] = 0;
   out_4479928638218003069[247] = 0;
   out_4479928638218003069[248] = 0;
   out_4479928638218003069[249] = 0;
   out_4479928638218003069[250] = 0;
   out_4479928638218003069[251] = 0;
   out_4479928638218003069[252] = 0;
   out_4479928638218003069[253] = 0;
   out_4479928638218003069[254] = 0;
   out_4479928638218003069[255] = 0;
   out_4479928638218003069[256] = 0;
   out_4479928638218003069[257] = 0;
   out_4479928638218003069[258] = 0;
   out_4479928638218003069[259] = 0;
   out_4479928638218003069[260] = 0;
   out_4479928638218003069[261] = 0;
   out_4479928638218003069[262] = 0;
   out_4479928638218003069[263] = 1.0;
   out_4479928638218003069[264] = 0;
   out_4479928638218003069[265] = 0;
   out_4479928638218003069[266] = 0;
   out_4479928638218003069[267] = 0;
   out_4479928638218003069[268] = 0;
   out_4479928638218003069[269] = 0;
   out_4479928638218003069[270] = 0;
   out_4479928638218003069[271] = 0;
   out_4479928638218003069[272] = 0;
   out_4479928638218003069[273] = 0;
   out_4479928638218003069[274] = 0;
   out_4479928638218003069[275] = 0;
   out_4479928638218003069[276] = 0;
   out_4479928638218003069[277] = 0;
   out_4479928638218003069[278] = 0;
   out_4479928638218003069[279] = 0;
   out_4479928638218003069[280] = 0;
   out_4479928638218003069[281] = 0;
   out_4479928638218003069[282] = 0;
   out_4479928638218003069[283] = 0;
   out_4479928638218003069[284] = 0;
   out_4479928638218003069[285] = 1.0;
   out_4479928638218003069[286] = 0;
   out_4479928638218003069[287] = 0;
   out_4479928638218003069[288] = 0;
   out_4479928638218003069[289] = 0;
   out_4479928638218003069[290] = 0;
   out_4479928638218003069[291] = 0;
   out_4479928638218003069[292] = 0;
   out_4479928638218003069[293] = 0;
   out_4479928638218003069[294] = 0;
   out_4479928638218003069[295] = 0;
   out_4479928638218003069[296] = 0;
   out_4479928638218003069[297] = 0;
   out_4479928638218003069[298] = 0;
   out_4479928638218003069[299] = 0;
   out_4479928638218003069[300] = 0;
   out_4479928638218003069[301] = 0;
   out_4479928638218003069[302] = 0;
   out_4479928638218003069[303] = 0;
   out_4479928638218003069[304] = 0;
   out_4479928638218003069[305] = 0;
   out_4479928638218003069[306] = 0;
   out_4479928638218003069[307] = 1.0;
   out_4479928638218003069[308] = 0;
   out_4479928638218003069[309] = 0;
   out_4479928638218003069[310] = 0;
   out_4479928638218003069[311] = 0;
   out_4479928638218003069[312] = 0;
   out_4479928638218003069[313] = 0;
   out_4479928638218003069[314] = 0;
   out_4479928638218003069[315] = 0;
   out_4479928638218003069[316] = 0;
   out_4479928638218003069[317] = 0;
   out_4479928638218003069[318] = 0;
   out_4479928638218003069[319] = 0;
   out_4479928638218003069[320] = 0;
   out_4479928638218003069[321] = 0;
   out_4479928638218003069[322] = 0;
   out_4479928638218003069[323] = 0;
   out_4479928638218003069[324] = 0;
   out_4479928638218003069[325] = 0;
   out_4479928638218003069[326] = 0;
   out_4479928638218003069[327] = 0;
   out_4479928638218003069[328] = 0;
   out_4479928638218003069[329] = 1.0;
   out_4479928638218003069[330] = 0;
   out_4479928638218003069[331] = 0;
   out_4479928638218003069[332] = 0;
   out_4479928638218003069[333] = 0;
   out_4479928638218003069[334] = 0;
   out_4479928638218003069[335] = 0;
   out_4479928638218003069[336] = 0;
   out_4479928638218003069[337] = 0;
   out_4479928638218003069[338] = 0;
   out_4479928638218003069[339] = 0;
   out_4479928638218003069[340] = 0;
   out_4479928638218003069[341] = 0;
   out_4479928638218003069[342] = 0;
   out_4479928638218003069[343] = 0;
   out_4479928638218003069[344] = 0;
   out_4479928638218003069[345] = 0;
   out_4479928638218003069[346] = 0;
   out_4479928638218003069[347] = 0;
   out_4479928638218003069[348] = 0;
   out_4479928638218003069[349] = 0;
   out_4479928638218003069[350] = 0;
   out_4479928638218003069[351] = 1.0;
   out_4479928638218003069[352] = 0;
   out_4479928638218003069[353] = 0;
   out_4479928638218003069[354] = 0;
   out_4479928638218003069[355] = 0;
   out_4479928638218003069[356] = 0;
   out_4479928638218003069[357] = 0;
   out_4479928638218003069[358] = 0;
   out_4479928638218003069[359] = 0;
   out_4479928638218003069[360] = 0;
   out_4479928638218003069[361] = 0;
   out_4479928638218003069[362] = 0;
   out_4479928638218003069[363] = 0;
   out_4479928638218003069[364] = 0;
   out_4479928638218003069[365] = 0;
   out_4479928638218003069[366] = 0;
   out_4479928638218003069[367] = 0;
   out_4479928638218003069[368] = 0;
   out_4479928638218003069[369] = 0;
   out_4479928638218003069[370] = 0;
   out_4479928638218003069[371] = 0;
   out_4479928638218003069[372] = 0;
   out_4479928638218003069[373] = 1.0;
   out_4479928638218003069[374] = 0;
   out_4479928638218003069[375] = 0;
   out_4479928638218003069[376] = 0;
   out_4479928638218003069[377] = 0;
   out_4479928638218003069[378] = 0;
   out_4479928638218003069[379] = 0;
   out_4479928638218003069[380] = 0;
   out_4479928638218003069[381] = 0;
   out_4479928638218003069[382] = 0;
   out_4479928638218003069[383] = 0;
   out_4479928638218003069[384] = 0;
   out_4479928638218003069[385] = 0;
   out_4479928638218003069[386] = 0;
   out_4479928638218003069[387] = 0;
   out_4479928638218003069[388] = 0;
   out_4479928638218003069[389] = 0;
   out_4479928638218003069[390] = 0;
   out_4479928638218003069[391] = 0;
   out_4479928638218003069[392] = 0;
   out_4479928638218003069[393] = 0;
   out_4479928638218003069[394] = 0;
   out_4479928638218003069[395] = 1.0;
   out_4479928638218003069[396] = 0;
   out_4479928638218003069[397] = 0;
   out_4479928638218003069[398] = 0;
   out_4479928638218003069[399] = 0;
   out_4479928638218003069[400] = 0;
   out_4479928638218003069[401] = 0;
   out_4479928638218003069[402] = 0;
   out_4479928638218003069[403] = 0;
   out_4479928638218003069[404] = 0;
   out_4479928638218003069[405] = 0;
   out_4479928638218003069[406] = 0;
   out_4479928638218003069[407] = 0;
   out_4479928638218003069[408] = 0;
   out_4479928638218003069[409] = 0;
   out_4479928638218003069[410] = 0;
   out_4479928638218003069[411] = 0;
   out_4479928638218003069[412] = 0;
   out_4479928638218003069[413] = 0;
   out_4479928638218003069[414] = 0;
   out_4479928638218003069[415] = 0;
   out_4479928638218003069[416] = 0;
   out_4479928638218003069[417] = 1.0;
   out_4479928638218003069[418] = 0;
   out_4479928638218003069[419] = 0;
   out_4479928638218003069[420] = 0;
   out_4479928638218003069[421] = 0;
   out_4479928638218003069[422] = 0;
   out_4479928638218003069[423] = 0;
   out_4479928638218003069[424] = 0;
   out_4479928638218003069[425] = 0;
   out_4479928638218003069[426] = 0;
   out_4479928638218003069[427] = 0;
   out_4479928638218003069[428] = 0;
   out_4479928638218003069[429] = 0;
   out_4479928638218003069[430] = 0;
   out_4479928638218003069[431] = 0;
   out_4479928638218003069[432] = 0;
   out_4479928638218003069[433] = 0;
   out_4479928638218003069[434] = 0;
   out_4479928638218003069[435] = 0;
   out_4479928638218003069[436] = 0;
   out_4479928638218003069[437] = 0;
   out_4479928638218003069[438] = 0;
   out_4479928638218003069[439] = 1.0;
   out_4479928638218003069[440] = 0;
   out_4479928638218003069[441] = 0;
   out_4479928638218003069[442] = 0;
   out_4479928638218003069[443] = 0;
   out_4479928638218003069[444] = 0;
   out_4479928638218003069[445] = 0;
   out_4479928638218003069[446] = 0;
   out_4479928638218003069[447] = 0;
   out_4479928638218003069[448] = 0;
   out_4479928638218003069[449] = 0;
   out_4479928638218003069[450] = 0;
   out_4479928638218003069[451] = 0;
   out_4479928638218003069[452] = 0;
   out_4479928638218003069[453] = 0;
   out_4479928638218003069[454] = 0;
   out_4479928638218003069[455] = 0;
   out_4479928638218003069[456] = 0;
   out_4479928638218003069[457] = 0;
   out_4479928638218003069[458] = 0;
   out_4479928638218003069[459] = 0;
   out_4479928638218003069[460] = 0;
   out_4479928638218003069[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_262283035690484694) {
   out_262283035690484694[0] = dt*state[7] + state[0];
   out_262283035690484694[1] = dt*state[8] + state[1];
   out_262283035690484694[2] = dt*state[9] + state[2];
   out_262283035690484694[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_262283035690484694[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_262283035690484694[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_262283035690484694[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_262283035690484694[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_262283035690484694[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_262283035690484694[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_262283035690484694[10] = state[10];
   out_262283035690484694[11] = state[11];
   out_262283035690484694[12] = state[12];
   out_262283035690484694[13] = state[13];
   out_262283035690484694[14] = state[14];
   out_262283035690484694[15] = state[15];
   out_262283035690484694[16] = state[16];
   out_262283035690484694[17] = state[17];
   out_262283035690484694[18] = state[18];
   out_262283035690484694[19] = state[19];
   out_262283035690484694[20] = state[20];
   out_262283035690484694[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1325286187468660998) {
   out_1325286187468660998[0] = 1;
   out_1325286187468660998[1] = 0;
   out_1325286187468660998[2] = 0;
   out_1325286187468660998[3] = 0;
   out_1325286187468660998[4] = 0;
   out_1325286187468660998[5] = 0;
   out_1325286187468660998[6] = dt;
   out_1325286187468660998[7] = 0;
   out_1325286187468660998[8] = 0;
   out_1325286187468660998[9] = 0;
   out_1325286187468660998[10] = 0;
   out_1325286187468660998[11] = 0;
   out_1325286187468660998[12] = 0;
   out_1325286187468660998[13] = 0;
   out_1325286187468660998[14] = 0;
   out_1325286187468660998[15] = 0;
   out_1325286187468660998[16] = 0;
   out_1325286187468660998[17] = 0;
   out_1325286187468660998[18] = 0;
   out_1325286187468660998[19] = 0;
   out_1325286187468660998[20] = 0;
   out_1325286187468660998[21] = 0;
   out_1325286187468660998[22] = 1;
   out_1325286187468660998[23] = 0;
   out_1325286187468660998[24] = 0;
   out_1325286187468660998[25] = 0;
   out_1325286187468660998[26] = 0;
   out_1325286187468660998[27] = 0;
   out_1325286187468660998[28] = dt;
   out_1325286187468660998[29] = 0;
   out_1325286187468660998[30] = 0;
   out_1325286187468660998[31] = 0;
   out_1325286187468660998[32] = 0;
   out_1325286187468660998[33] = 0;
   out_1325286187468660998[34] = 0;
   out_1325286187468660998[35] = 0;
   out_1325286187468660998[36] = 0;
   out_1325286187468660998[37] = 0;
   out_1325286187468660998[38] = 0;
   out_1325286187468660998[39] = 0;
   out_1325286187468660998[40] = 0;
   out_1325286187468660998[41] = 0;
   out_1325286187468660998[42] = 0;
   out_1325286187468660998[43] = 0;
   out_1325286187468660998[44] = 1;
   out_1325286187468660998[45] = 0;
   out_1325286187468660998[46] = 0;
   out_1325286187468660998[47] = 0;
   out_1325286187468660998[48] = 0;
   out_1325286187468660998[49] = 0;
   out_1325286187468660998[50] = dt;
   out_1325286187468660998[51] = 0;
   out_1325286187468660998[52] = 0;
   out_1325286187468660998[53] = 0;
   out_1325286187468660998[54] = 0;
   out_1325286187468660998[55] = 0;
   out_1325286187468660998[56] = 0;
   out_1325286187468660998[57] = 0;
   out_1325286187468660998[58] = 0;
   out_1325286187468660998[59] = 0;
   out_1325286187468660998[60] = 0;
   out_1325286187468660998[61] = 0;
   out_1325286187468660998[62] = 0;
   out_1325286187468660998[63] = 0;
   out_1325286187468660998[64] = 0;
   out_1325286187468660998[65] = 0;
   out_1325286187468660998[66] = 1;
   out_1325286187468660998[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1325286187468660998[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1325286187468660998[69] = 0;
   out_1325286187468660998[70] = 0;
   out_1325286187468660998[71] = 0;
   out_1325286187468660998[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1325286187468660998[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1325286187468660998[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1325286187468660998[75] = 0;
   out_1325286187468660998[76] = 0;
   out_1325286187468660998[77] = 0;
   out_1325286187468660998[78] = 0;
   out_1325286187468660998[79] = 0;
   out_1325286187468660998[80] = 0;
   out_1325286187468660998[81] = 0;
   out_1325286187468660998[82] = 0;
   out_1325286187468660998[83] = 0;
   out_1325286187468660998[84] = 0;
   out_1325286187468660998[85] = 0;
   out_1325286187468660998[86] = 0;
   out_1325286187468660998[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1325286187468660998[88] = 1;
   out_1325286187468660998[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1325286187468660998[90] = 0;
   out_1325286187468660998[91] = 0;
   out_1325286187468660998[92] = 0;
   out_1325286187468660998[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1325286187468660998[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1325286187468660998[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1325286187468660998[96] = 0;
   out_1325286187468660998[97] = 0;
   out_1325286187468660998[98] = 0;
   out_1325286187468660998[99] = 0;
   out_1325286187468660998[100] = 0;
   out_1325286187468660998[101] = 0;
   out_1325286187468660998[102] = 0;
   out_1325286187468660998[103] = 0;
   out_1325286187468660998[104] = 0;
   out_1325286187468660998[105] = 0;
   out_1325286187468660998[106] = 0;
   out_1325286187468660998[107] = 0;
   out_1325286187468660998[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1325286187468660998[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1325286187468660998[110] = 1;
   out_1325286187468660998[111] = 0;
   out_1325286187468660998[112] = 0;
   out_1325286187468660998[113] = 0;
   out_1325286187468660998[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1325286187468660998[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1325286187468660998[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1325286187468660998[117] = 0;
   out_1325286187468660998[118] = 0;
   out_1325286187468660998[119] = 0;
   out_1325286187468660998[120] = 0;
   out_1325286187468660998[121] = 0;
   out_1325286187468660998[122] = 0;
   out_1325286187468660998[123] = 0;
   out_1325286187468660998[124] = 0;
   out_1325286187468660998[125] = 0;
   out_1325286187468660998[126] = 0;
   out_1325286187468660998[127] = 0;
   out_1325286187468660998[128] = 0;
   out_1325286187468660998[129] = 0;
   out_1325286187468660998[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1325286187468660998[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1325286187468660998[132] = 1;
   out_1325286187468660998[133] = 0;
   out_1325286187468660998[134] = 0;
   out_1325286187468660998[135] = 0;
   out_1325286187468660998[136] = 0;
   out_1325286187468660998[137] = 0;
   out_1325286187468660998[138] = 0;
   out_1325286187468660998[139] = 0;
   out_1325286187468660998[140] = 0;
   out_1325286187468660998[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1325286187468660998[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1325286187468660998[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1325286187468660998[144] = 0;
   out_1325286187468660998[145] = 0;
   out_1325286187468660998[146] = 0;
   out_1325286187468660998[147] = 0;
   out_1325286187468660998[148] = 0;
   out_1325286187468660998[149] = 0;
   out_1325286187468660998[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1325286187468660998[151] = 0;
   out_1325286187468660998[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1325286187468660998[153] = 0;
   out_1325286187468660998[154] = 1;
   out_1325286187468660998[155] = 0;
   out_1325286187468660998[156] = 0;
   out_1325286187468660998[157] = 0;
   out_1325286187468660998[158] = 0;
   out_1325286187468660998[159] = 0;
   out_1325286187468660998[160] = 0;
   out_1325286187468660998[161] = 0;
   out_1325286187468660998[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1325286187468660998[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1325286187468660998[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1325286187468660998[165] = 0;
   out_1325286187468660998[166] = 0;
   out_1325286187468660998[167] = 0;
   out_1325286187468660998[168] = 0;
   out_1325286187468660998[169] = 0;
   out_1325286187468660998[170] = 0;
   out_1325286187468660998[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1325286187468660998[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1325286187468660998[173] = 0;
   out_1325286187468660998[174] = 0;
   out_1325286187468660998[175] = 0;
   out_1325286187468660998[176] = 1;
   out_1325286187468660998[177] = 0;
   out_1325286187468660998[178] = 0;
   out_1325286187468660998[179] = 0;
   out_1325286187468660998[180] = 0;
   out_1325286187468660998[181] = 0;
   out_1325286187468660998[182] = 0;
   out_1325286187468660998[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1325286187468660998[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1325286187468660998[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1325286187468660998[186] = 0;
   out_1325286187468660998[187] = 0;
   out_1325286187468660998[188] = 0;
   out_1325286187468660998[189] = 0;
   out_1325286187468660998[190] = 0;
   out_1325286187468660998[191] = 0;
   out_1325286187468660998[192] = 0;
   out_1325286187468660998[193] = 0;
   out_1325286187468660998[194] = 0;
   out_1325286187468660998[195] = 0;
   out_1325286187468660998[196] = 0;
   out_1325286187468660998[197] = 0;
   out_1325286187468660998[198] = 1;
   out_1325286187468660998[199] = 0;
   out_1325286187468660998[200] = 0;
   out_1325286187468660998[201] = 0;
   out_1325286187468660998[202] = 0;
   out_1325286187468660998[203] = 0;
   out_1325286187468660998[204] = 0;
   out_1325286187468660998[205] = 0;
   out_1325286187468660998[206] = 0;
   out_1325286187468660998[207] = 0;
   out_1325286187468660998[208] = 0;
   out_1325286187468660998[209] = 0;
   out_1325286187468660998[210] = 0;
   out_1325286187468660998[211] = 0;
   out_1325286187468660998[212] = 0;
   out_1325286187468660998[213] = 0;
   out_1325286187468660998[214] = 0;
   out_1325286187468660998[215] = 0;
   out_1325286187468660998[216] = 0;
   out_1325286187468660998[217] = 0;
   out_1325286187468660998[218] = 0;
   out_1325286187468660998[219] = 0;
   out_1325286187468660998[220] = 1;
   out_1325286187468660998[221] = 0;
   out_1325286187468660998[222] = 0;
   out_1325286187468660998[223] = 0;
   out_1325286187468660998[224] = 0;
   out_1325286187468660998[225] = 0;
   out_1325286187468660998[226] = 0;
   out_1325286187468660998[227] = 0;
   out_1325286187468660998[228] = 0;
   out_1325286187468660998[229] = 0;
   out_1325286187468660998[230] = 0;
   out_1325286187468660998[231] = 0;
   out_1325286187468660998[232] = 0;
   out_1325286187468660998[233] = 0;
   out_1325286187468660998[234] = 0;
   out_1325286187468660998[235] = 0;
   out_1325286187468660998[236] = 0;
   out_1325286187468660998[237] = 0;
   out_1325286187468660998[238] = 0;
   out_1325286187468660998[239] = 0;
   out_1325286187468660998[240] = 0;
   out_1325286187468660998[241] = 0;
   out_1325286187468660998[242] = 1;
   out_1325286187468660998[243] = 0;
   out_1325286187468660998[244] = 0;
   out_1325286187468660998[245] = 0;
   out_1325286187468660998[246] = 0;
   out_1325286187468660998[247] = 0;
   out_1325286187468660998[248] = 0;
   out_1325286187468660998[249] = 0;
   out_1325286187468660998[250] = 0;
   out_1325286187468660998[251] = 0;
   out_1325286187468660998[252] = 0;
   out_1325286187468660998[253] = 0;
   out_1325286187468660998[254] = 0;
   out_1325286187468660998[255] = 0;
   out_1325286187468660998[256] = 0;
   out_1325286187468660998[257] = 0;
   out_1325286187468660998[258] = 0;
   out_1325286187468660998[259] = 0;
   out_1325286187468660998[260] = 0;
   out_1325286187468660998[261] = 0;
   out_1325286187468660998[262] = 0;
   out_1325286187468660998[263] = 0;
   out_1325286187468660998[264] = 1;
   out_1325286187468660998[265] = 0;
   out_1325286187468660998[266] = 0;
   out_1325286187468660998[267] = 0;
   out_1325286187468660998[268] = 0;
   out_1325286187468660998[269] = 0;
   out_1325286187468660998[270] = 0;
   out_1325286187468660998[271] = 0;
   out_1325286187468660998[272] = 0;
   out_1325286187468660998[273] = 0;
   out_1325286187468660998[274] = 0;
   out_1325286187468660998[275] = 0;
   out_1325286187468660998[276] = 0;
   out_1325286187468660998[277] = 0;
   out_1325286187468660998[278] = 0;
   out_1325286187468660998[279] = 0;
   out_1325286187468660998[280] = 0;
   out_1325286187468660998[281] = 0;
   out_1325286187468660998[282] = 0;
   out_1325286187468660998[283] = 0;
   out_1325286187468660998[284] = 0;
   out_1325286187468660998[285] = 0;
   out_1325286187468660998[286] = 1;
   out_1325286187468660998[287] = 0;
   out_1325286187468660998[288] = 0;
   out_1325286187468660998[289] = 0;
   out_1325286187468660998[290] = 0;
   out_1325286187468660998[291] = 0;
   out_1325286187468660998[292] = 0;
   out_1325286187468660998[293] = 0;
   out_1325286187468660998[294] = 0;
   out_1325286187468660998[295] = 0;
   out_1325286187468660998[296] = 0;
   out_1325286187468660998[297] = 0;
   out_1325286187468660998[298] = 0;
   out_1325286187468660998[299] = 0;
   out_1325286187468660998[300] = 0;
   out_1325286187468660998[301] = 0;
   out_1325286187468660998[302] = 0;
   out_1325286187468660998[303] = 0;
   out_1325286187468660998[304] = 0;
   out_1325286187468660998[305] = 0;
   out_1325286187468660998[306] = 0;
   out_1325286187468660998[307] = 0;
   out_1325286187468660998[308] = 1;
   out_1325286187468660998[309] = 0;
   out_1325286187468660998[310] = 0;
   out_1325286187468660998[311] = 0;
   out_1325286187468660998[312] = 0;
   out_1325286187468660998[313] = 0;
   out_1325286187468660998[314] = 0;
   out_1325286187468660998[315] = 0;
   out_1325286187468660998[316] = 0;
   out_1325286187468660998[317] = 0;
   out_1325286187468660998[318] = 0;
   out_1325286187468660998[319] = 0;
   out_1325286187468660998[320] = 0;
   out_1325286187468660998[321] = 0;
   out_1325286187468660998[322] = 0;
   out_1325286187468660998[323] = 0;
   out_1325286187468660998[324] = 0;
   out_1325286187468660998[325] = 0;
   out_1325286187468660998[326] = 0;
   out_1325286187468660998[327] = 0;
   out_1325286187468660998[328] = 0;
   out_1325286187468660998[329] = 0;
   out_1325286187468660998[330] = 1;
   out_1325286187468660998[331] = 0;
   out_1325286187468660998[332] = 0;
   out_1325286187468660998[333] = 0;
   out_1325286187468660998[334] = 0;
   out_1325286187468660998[335] = 0;
   out_1325286187468660998[336] = 0;
   out_1325286187468660998[337] = 0;
   out_1325286187468660998[338] = 0;
   out_1325286187468660998[339] = 0;
   out_1325286187468660998[340] = 0;
   out_1325286187468660998[341] = 0;
   out_1325286187468660998[342] = 0;
   out_1325286187468660998[343] = 0;
   out_1325286187468660998[344] = 0;
   out_1325286187468660998[345] = 0;
   out_1325286187468660998[346] = 0;
   out_1325286187468660998[347] = 0;
   out_1325286187468660998[348] = 0;
   out_1325286187468660998[349] = 0;
   out_1325286187468660998[350] = 0;
   out_1325286187468660998[351] = 0;
   out_1325286187468660998[352] = 1;
   out_1325286187468660998[353] = 0;
   out_1325286187468660998[354] = 0;
   out_1325286187468660998[355] = 0;
   out_1325286187468660998[356] = 0;
   out_1325286187468660998[357] = 0;
   out_1325286187468660998[358] = 0;
   out_1325286187468660998[359] = 0;
   out_1325286187468660998[360] = 0;
   out_1325286187468660998[361] = 0;
   out_1325286187468660998[362] = 0;
   out_1325286187468660998[363] = 0;
   out_1325286187468660998[364] = 0;
   out_1325286187468660998[365] = 0;
   out_1325286187468660998[366] = 0;
   out_1325286187468660998[367] = 0;
   out_1325286187468660998[368] = 0;
   out_1325286187468660998[369] = 0;
   out_1325286187468660998[370] = 0;
   out_1325286187468660998[371] = 0;
   out_1325286187468660998[372] = 0;
   out_1325286187468660998[373] = 0;
   out_1325286187468660998[374] = 1;
   out_1325286187468660998[375] = 0;
   out_1325286187468660998[376] = 0;
   out_1325286187468660998[377] = 0;
   out_1325286187468660998[378] = 0;
   out_1325286187468660998[379] = 0;
   out_1325286187468660998[380] = 0;
   out_1325286187468660998[381] = 0;
   out_1325286187468660998[382] = 0;
   out_1325286187468660998[383] = 0;
   out_1325286187468660998[384] = 0;
   out_1325286187468660998[385] = 0;
   out_1325286187468660998[386] = 0;
   out_1325286187468660998[387] = 0;
   out_1325286187468660998[388] = 0;
   out_1325286187468660998[389] = 0;
   out_1325286187468660998[390] = 0;
   out_1325286187468660998[391] = 0;
   out_1325286187468660998[392] = 0;
   out_1325286187468660998[393] = 0;
   out_1325286187468660998[394] = 0;
   out_1325286187468660998[395] = 0;
   out_1325286187468660998[396] = 1;
   out_1325286187468660998[397] = 0;
   out_1325286187468660998[398] = 0;
   out_1325286187468660998[399] = 0;
   out_1325286187468660998[400] = 0;
   out_1325286187468660998[401] = 0;
   out_1325286187468660998[402] = 0;
   out_1325286187468660998[403] = 0;
   out_1325286187468660998[404] = 0;
   out_1325286187468660998[405] = 0;
   out_1325286187468660998[406] = 0;
   out_1325286187468660998[407] = 0;
   out_1325286187468660998[408] = 0;
   out_1325286187468660998[409] = 0;
   out_1325286187468660998[410] = 0;
   out_1325286187468660998[411] = 0;
   out_1325286187468660998[412] = 0;
   out_1325286187468660998[413] = 0;
   out_1325286187468660998[414] = 0;
   out_1325286187468660998[415] = 0;
   out_1325286187468660998[416] = 0;
   out_1325286187468660998[417] = 0;
   out_1325286187468660998[418] = 1;
   out_1325286187468660998[419] = 0;
   out_1325286187468660998[420] = 0;
   out_1325286187468660998[421] = 0;
   out_1325286187468660998[422] = 0;
   out_1325286187468660998[423] = 0;
   out_1325286187468660998[424] = 0;
   out_1325286187468660998[425] = 0;
   out_1325286187468660998[426] = 0;
   out_1325286187468660998[427] = 0;
   out_1325286187468660998[428] = 0;
   out_1325286187468660998[429] = 0;
   out_1325286187468660998[430] = 0;
   out_1325286187468660998[431] = 0;
   out_1325286187468660998[432] = 0;
   out_1325286187468660998[433] = 0;
   out_1325286187468660998[434] = 0;
   out_1325286187468660998[435] = 0;
   out_1325286187468660998[436] = 0;
   out_1325286187468660998[437] = 0;
   out_1325286187468660998[438] = 0;
   out_1325286187468660998[439] = 0;
   out_1325286187468660998[440] = 1;
}
void h_4(double *state, double *unused, double *out_7413195925170192470) {
   out_7413195925170192470[0] = state[10] + state[13];
   out_7413195925170192470[1] = state[11] + state[14];
   out_7413195925170192470[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5482573754117837714) {
   out_5482573754117837714[0] = 0;
   out_5482573754117837714[1] = 0;
   out_5482573754117837714[2] = 0;
   out_5482573754117837714[3] = 0;
   out_5482573754117837714[4] = 0;
   out_5482573754117837714[5] = 0;
   out_5482573754117837714[6] = 0;
   out_5482573754117837714[7] = 0;
   out_5482573754117837714[8] = 0;
   out_5482573754117837714[9] = 0;
   out_5482573754117837714[10] = 1;
   out_5482573754117837714[11] = 0;
   out_5482573754117837714[12] = 0;
   out_5482573754117837714[13] = 1;
   out_5482573754117837714[14] = 0;
   out_5482573754117837714[15] = 0;
   out_5482573754117837714[16] = 0;
   out_5482573754117837714[17] = 0;
   out_5482573754117837714[18] = 0;
   out_5482573754117837714[19] = 0;
   out_5482573754117837714[20] = 0;
   out_5482573754117837714[21] = 0;
   out_5482573754117837714[22] = 0;
   out_5482573754117837714[23] = 0;
   out_5482573754117837714[24] = 0;
   out_5482573754117837714[25] = 0;
   out_5482573754117837714[26] = 0;
   out_5482573754117837714[27] = 0;
   out_5482573754117837714[28] = 0;
   out_5482573754117837714[29] = 0;
   out_5482573754117837714[30] = 0;
   out_5482573754117837714[31] = 0;
   out_5482573754117837714[32] = 0;
   out_5482573754117837714[33] = 1;
   out_5482573754117837714[34] = 0;
   out_5482573754117837714[35] = 0;
   out_5482573754117837714[36] = 1;
   out_5482573754117837714[37] = 0;
   out_5482573754117837714[38] = 0;
   out_5482573754117837714[39] = 0;
   out_5482573754117837714[40] = 0;
   out_5482573754117837714[41] = 0;
   out_5482573754117837714[42] = 0;
   out_5482573754117837714[43] = 0;
   out_5482573754117837714[44] = 0;
   out_5482573754117837714[45] = 0;
   out_5482573754117837714[46] = 0;
   out_5482573754117837714[47] = 0;
   out_5482573754117837714[48] = 0;
   out_5482573754117837714[49] = 0;
   out_5482573754117837714[50] = 0;
   out_5482573754117837714[51] = 0;
   out_5482573754117837714[52] = 0;
   out_5482573754117837714[53] = 0;
   out_5482573754117837714[54] = 0;
   out_5482573754117837714[55] = 0;
   out_5482573754117837714[56] = 1;
   out_5482573754117837714[57] = 0;
   out_5482573754117837714[58] = 0;
   out_5482573754117837714[59] = 1;
   out_5482573754117837714[60] = 0;
   out_5482573754117837714[61] = 0;
   out_5482573754117837714[62] = 0;
   out_5482573754117837714[63] = 0;
   out_5482573754117837714[64] = 0;
   out_5482573754117837714[65] = 0;
}
void h_9(double *state, double *unused, double *out_3358148432970012198) {
   out_3358148432970012198[0] = state[10];
   out_3358148432970012198[1] = state[11];
   out_3358148432970012198[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1804645181146609756) {
   out_1804645181146609756[0] = 0;
   out_1804645181146609756[1] = 0;
   out_1804645181146609756[2] = 0;
   out_1804645181146609756[3] = 0;
   out_1804645181146609756[4] = 0;
   out_1804645181146609756[5] = 0;
   out_1804645181146609756[6] = 0;
   out_1804645181146609756[7] = 0;
   out_1804645181146609756[8] = 0;
   out_1804645181146609756[9] = 0;
   out_1804645181146609756[10] = 1;
   out_1804645181146609756[11] = 0;
   out_1804645181146609756[12] = 0;
   out_1804645181146609756[13] = 0;
   out_1804645181146609756[14] = 0;
   out_1804645181146609756[15] = 0;
   out_1804645181146609756[16] = 0;
   out_1804645181146609756[17] = 0;
   out_1804645181146609756[18] = 0;
   out_1804645181146609756[19] = 0;
   out_1804645181146609756[20] = 0;
   out_1804645181146609756[21] = 0;
   out_1804645181146609756[22] = 0;
   out_1804645181146609756[23] = 0;
   out_1804645181146609756[24] = 0;
   out_1804645181146609756[25] = 0;
   out_1804645181146609756[26] = 0;
   out_1804645181146609756[27] = 0;
   out_1804645181146609756[28] = 0;
   out_1804645181146609756[29] = 0;
   out_1804645181146609756[30] = 0;
   out_1804645181146609756[31] = 0;
   out_1804645181146609756[32] = 0;
   out_1804645181146609756[33] = 1;
   out_1804645181146609756[34] = 0;
   out_1804645181146609756[35] = 0;
   out_1804645181146609756[36] = 0;
   out_1804645181146609756[37] = 0;
   out_1804645181146609756[38] = 0;
   out_1804645181146609756[39] = 0;
   out_1804645181146609756[40] = 0;
   out_1804645181146609756[41] = 0;
   out_1804645181146609756[42] = 0;
   out_1804645181146609756[43] = 0;
   out_1804645181146609756[44] = 0;
   out_1804645181146609756[45] = 0;
   out_1804645181146609756[46] = 0;
   out_1804645181146609756[47] = 0;
   out_1804645181146609756[48] = 0;
   out_1804645181146609756[49] = 0;
   out_1804645181146609756[50] = 0;
   out_1804645181146609756[51] = 0;
   out_1804645181146609756[52] = 0;
   out_1804645181146609756[53] = 0;
   out_1804645181146609756[54] = 0;
   out_1804645181146609756[55] = 0;
   out_1804645181146609756[56] = 1;
   out_1804645181146609756[57] = 0;
   out_1804645181146609756[58] = 0;
   out_1804645181146609756[59] = 0;
   out_1804645181146609756[60] = 0;
   out_1804645181146609756[61] = 0;
   out_1804645181146609756[62] = 0;
   out_1804645181146609756[63] = 0;
   out_1804645181146609756[64] = 0;
   out_1804645181146609756[65] = 0;
}
void h_10(double *state, double *unused, double *out_8120918261206966651) {
   out_8120918261206966651[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8120918261206966651[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8120918261206966651[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5268034709010358343) {
   out_5268034709010358343[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5268034709010358343[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5268034709010358343[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5268034709010358343[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5268034709010358343[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5268034709010358343[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5268034709010358343[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5268034709010358343[7] = 0;
   out_5268034709010358343[8] = 0;
   out_5268034709010358343[9] = 0;
   out_5268034709010358343[10] = 0;
   out_5268034709010358343[11] = 0;
   out_5268034709010358343[12] = 0;
   out_5268034709010358343[13] = 0;
   out_5268034709010358343[14] = 0;
   out_5268034709010358343[15] = 0;
   out_5268034709010358343[16] = 1;
   out_5268034709010358343[17] = 0;
   out_5268034709010358343[18] = 0;
   out_5268034709010358343[19] = 1;
   out_5268034709010358343[20] = 0;
   out_5268034709010358343[21] = 0;
   out_5268034709010358343[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5268034709010358343[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5268034709010358343[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5268034709010358343[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5268034709010358343[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5268034709010358343[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5268034709010358343[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5268034709010358343[29] = 0;
   out_5268034709010358343[30] = 0;
   out_5268034709010358343[31] = 0;
   out_5268034709010358343[32] = 0;
   out_5268034709010358343[33] = 0;
   out_5268034709010358343[34] = 0;
   out_5268034709010358343[35] = 0;
   out_5268034709010358343[36] = 0;
   out_5268034709010358343[37] = 0;
   out_5268034709010358343[38] = 0;
   out_5268034709010358343[39] = 1;
   out_5268034709010358343[40] = 0;
   out_5268034709010358343[41] = 0;
   out_5268034709010358343[42] = 1;
   out_5268034709010358343[43] = 0;
   out_5268034709010358343[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5268034709010358343[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5268034709010358343[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5268034709010358343[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5268034709010358343[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5268034709010358343[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5268034709010358343[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5268034709010358343[51] = 0;
   out_5268034709010358343[52] = 0;
   out_5268034709010358343[53] = 0;
   out_5268034709010358343[54] = 0;
   out_5268034709010358343[55] = 0;
   out_5268034709010358343[56] = 0;
   out_5268034709010358343[57] = 0;
   out_5268034709010358343[58] = 0;
   out_5268034709010358343[59] = 0;
   out_5268034709010358343[60] = 0;
   out_5268034709010358343[61] = 0;
   out_5268034709010358343[62] = 1;
   out_5268034709010358343[63] = 0;
   out_5268034709010358343[64] = 0;
   out_5268034709010358343[65] = 1;
}
void h_12(double *state, double *unused, double *out_3031181799664214664) {
   out_3031181799664214664[0] = state[0];
   out_3031181799664214664[1] = state[1];
   out_3031181799664214664[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6582911942548980906) {
   out_6582911942548980906[0] = 1;
   out_6582911942548980906[1] = 0;
   out_6582911942548980906[2] = 0;
   out_6582911942548980906[3] = 0;
   out_6582911942548980906[4] = 0;
   out_6582911942548980906[5] = 0;
   out_6582911942548980906[6] = 0;
   out_6582911942548980906[7] = 0;
   out_6582911942548980906[8] = 0;
   out_6582911942548980906[9] = 0;
   out_6582911942548980906[10] = 0;
   out_6582911942548980906[11] = 0;
   out_6582911942548980906[12] = 0;
   out_6582911942548980906[13] = 0;
   out_6582911942548980906[14] = 0;
   out_6582911942548980906[15] = 0;
   out_6582911942548980906[16] = 0;
   out_6582911942548980906[17] = 0;
   out_6582911942548980906[18] = 0;
   out_6582911942548980906[19] = 0;
   out_6582911942548980906[20] = 0;
   out_6582911942548980906[21] = 0;
   out_6582911942548980906[22] = 0;
   out_6582911942548980906[23] = 1;
   out_6582911942548980906[24] = 0;
   out_6582911942548980906[25] = 0;
   out_6582911942548980906[26] = 0;
   out_6582911942548980906[27] = 0;
   out_6582911942548980906[28] = 0;
   out_6582911942548980906[29] = 0;
   out_6582911942548980906[30] = 0;
   out_6582911942548980906[31] = 0;
   out_6582911942548980906[32] = 0;
   out_6582911942548980906[33] = 0;
   out_6582911942548980906[34] = 0;
   out_6582911942548980906[35] = 0;
   out_6582911942548980906[36] = 0;
   out_6582911942548980906[37] = 0;
   out_6582911942548980906[38] = 0;
   out_6582911942548980906[39] = 0;
   out_6582911942548980906[40] = 0;
   out_6582911942548980906[41] = 0;
   out_6582911942548980906[42] = 0;
   out_6582911942548980906[43] = 0;
   out_6582911942548980906[44] = 0;
   out_6582911942548980906[45] = 0;
   out_6582911942548980906[46] = 1;
   out_6582911942548980906[47] = 0;
   out_6582911942548980906[48] = 0;
   out_6582911942548980906[49] = 0;
   out_6582911942548980906[50] = 0;
   out_6582911942548980906[51] = 0;
   out_6582911942548980906[52] = 0;
   out_6582911942548980906[53] = 0;
   out_6582911942548980906[54] = 0;
   out_6582911942548980906[55] = 0;
   out_6582911942548980906[56] = 0;
   out_6582911942548980906[57] = 0;
   out_6582911942548980906[58] = 0;
   out_6582911942548980906[59] = 0;
   out_6582911942548980906[60] = 0;
   out_6582911942548980906[61] = 0;
   out_6582911942548980906[62] = 0;
   out_6582911942548980906[63] = 0;
   out_6582911942548980906[64] = 0;
   out_6582911942548980906[65] = 0;
}
void h_35(double *state, double *unused, double *out_8689434747193440267) {
   out_8689434747193440267[0] = state[7];
   out_8689434747193440267[1] = state[8];
   out_8689434747193440267[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2115911696745230338) {
   out_2115911696745230338[0] = 0;
   out_2115911696745230338[1] = 0;
   out_2115911696745230338[2] = 0;
   out_2115911696745230338[3] = 0;
   out_2115911696745230338[4] = 0;
   out_2115911696745230338[5] = 0;
   out_2115911696745230338[6] = 0;
   out_2115911696745230338[7] = 1;
   out_2115911696745230338[8] = 0;
   out_2115911696745230338[9] = 0;
   out_2115911696745230338[10] = 0;
   out_2115911696745230338[11] = 0;
   out_2115911696745230338[12] = 0;
   out_2115911696745230338[13] = 0;
   out_2115911696745230338[14] = 0;
   out_2115911696745230338[15] = 0;
   out_2115911696745230338[16] = 0;
   out_2115911696745230338[17] = 0;
   out_2115911696745230338[18] = 0;
   out_2115911696745230338[19] = 0;
   out_2115911696745230338[20] = 0;
   out_2115911696745230338[21] = 0;
   out_2115911696745230338[22] = 0;
   out_2115911696745230338[23] = 0;
   out_2115911696745230338[24] = 0;
   out_2115911696745230338[25] = 0;
   out_2115911696745230338[26] = 0;
   out_2115911696745230338[27] = 0;
   out_2115911696745230338[28] = 0;
   out_2115911696745230338[29] = 0;
   out_2115911696745230338[30] = 1;
   out_2115911696745230338[31] = 0;
   out_2115911696745230338[32] = 0;
   out_2115911696745230338[33] = 0;
   out_2115911696745230338[34] = 0;
   out_2115911696745230338[35] = 0;
   out_2115911696745230338[36] = 0;
   out_2115911696745230338[37] = 0;
   out_2115911696745230338[38] = 0;
   out_2115911696745230338[39] = 0;
   out_2115911696745230338[40] = 0;
   out_2115911696745230338[41] = 0;
   out_2115911696745230338[42] = 0;
   out_2115911696745230338[43] = 0;
   out_2115911696745230338[44] = 0;
   out_2115911696745230338[45] = 0;
   out_2115911696745230338[46] = 0;
   out_2115911696745230338[47] = 0;
   out_2115911696745230338[48] = 0;
   out_2115911696745230338[49] = 0;
   out_2115911696745230338[50] = 0;
   out_2115911696745230338[51] = 0;
   out_2115911696745230338[52] = 0;
   out_2115911696745230338[53] = 1;
   out_2115911696745230338[54] = 0;
   out_2115911696745230338[55] = 0;
   out_2115911696745230338[56] = 0;
   out_2115911696745230338[57] = 0;
   out_2115911696745230338[58] = 0;
   out_2115911696745230338[59] = 0;
   out_2115911696745230338[60] = 0;
   out_2115911696745230338[61] = 0;
   out_2115911696745230338[62] = 0;
   out_2115911696745230338[63] = 0;
   out_2115911696745230338[64] = 0;
   out_2115911696745230338[65] = 0;
}
void h_32(double *state, double *unused, double *out_4425036595514927008) {
   out_4425036595514927008[0] = state[3];
   out_4425036595514927008[1] = state[4];
   out_4425036595514927008[2] = state[5];
   out_4425036595514927008[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3760751206456129940) {
   out_3760751206456129940[0] = 0;
   out_3760751206456129940[1] = 0;
   out_3760751206456129940[2] = 0;
   out_3760751206456129940[3] = 1;
   out_3760751206456129940[4] = 0;
   out_3760751206456129940[5] = 0;
   out_3760751206456129940[6] = 0;
   out_3760751206456129940[7] = 0;
   out_3760751206456129940[8] = 0;
   out_3760751206456129940[9] = 0;
   out_3760751206456129940[10] = 0;
   out_3760751206456129940[11] = 0;
   out_3760751206456129940[12] = 0;
   out_3760751206456129940[13] = 0;
   out_3760751206456129940[14] = 0;
   out_3760751206456129940[15] = 0;
   out_3760751206456129940[16] = 0;
   out_3760751206456129940[17] = 0;
   out_3760751206456129940[18] = 0;
   out_3760751206456129940[19] = 0;
   out_3760751206456129940[20] = 0;
   out_3760751206456129940[21] = 0;
   out_3760751206456129940[22] = 0;
   out_3760751206456129940[23] = 0;
   out_3760751206456129940[24] = 0;
   out_3760751206456129940[25] = 0;
   out_3760751206456129940[26] = 1;
   out_3760751206456129940[27] = 0;
   out_3760751206456129940[28] = 0;
   out_3760751206456129940[29] = 0;
   out_3760751206456129940[30] = 0;
   out_3760751206456129940[31] = 0;
   out_3760751206456129940[32] = 0;
   out_3760751206456129940[33] = 0;
   out_3760751206456129940[34] = 0;
   out_3760751206456129940[35] = 0;
   out_3760751206456129940[36] = 0;
   out_3760751206456129940[37] = 0;
   out_3760751206456129940[38] = 0;
   out_3760751206456129940[39] = 0;
   out_3760751206456129940[40] = 0;
   out_3760751206456129940[41] = 0;
   out_3760751206456129940[42] = 0;
   out_3760751206456129940[43] = 0;
   out_3760751206456129940[44] = 0;
   out_3760751206456129940[45] = 0;
   out_3760751206456129940[46] = 0;
   out_3760751206456129940[47] = 0;
   out_3760751206456129940[48] = 0;
   out_3760751206456129940[49] = 1;
   out_3760751206456129940[50] = 0;
   out_3760751206456129940[51] = 0;
   out_3760751206456129940[52] = 0;
   out_3760751206456129940[53] = 0;
   out_3760751206456129940[54] = 0;
   out_3760751206456129940[55] = 0;
   out_3760751206456129940[56] = 0;
   out_3760751206456129940[57] = 0;
   out_3760751206456129940[58] = 0;
   out_3760751206456129940[59] = 0;
   out_3760751206456129940[60] = 0;
   out_3760751206456129940[61] = 0;
   out_3760751206456129940[62] = 0;
   out_3760751206456129940[63] = 0;
   out_3760751206456129940[64] = 0;
   out_3760751206456129940[65] = 0;
   out_3760751206456129940[66] = 0;
   out_3760751206456129940[67] = 0;
   out_3760751206456129940[68] = 0;
   out_3760751206456129940[69] = 0;
   out_3760751206456129940[70] = 0;
   out_3760751206456129940[71] = 0;
   out_3760751206456129940[72] = 1;
   out_3760751206456129940[73] = 0;
   out_3760751206456129940[74] = 0;
   out_3760751206456129940[75] = 0;
   out_3760751206456129940[76] = 0;
   out_3760751206456129940[77] = 0;
   out_3760751206456129940[78] = 0;
   out_3760751206456129940[79] = 0;
   out_3760751206456129940[80] = 0;
   out_3760751206456129940[81] = 0;
   out_3760751206456129940[82] = 0;
   out_3760751206456129940[83] = 0;
   out_3760751206456129940[84] = 0;
   out_3760751206456129940[85] = 0;
   out_3760751206456129940[86] = 0;
   out_3760751206456129940[87] = 0;
}
void h_13(double *state, double *unused, double *out_6572175830757283971) {
   out_6572175830757283971[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6572175830757283971[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6572175830757283971[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3762712114619565501) {
   out_3762712114619565501[0] = 0;
   out_3762712114619565501[1] = 0;
   out_3762712114619565501[2] = 0;
   out_3762712114619565501[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3762712114619565501[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3762712114619565501[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3762712114619565501[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3762712114619565501[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3762712114619565501[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3762712114619565501[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3762712114619565501[10] = 0;
   out_3762712114619565501[11] = 0;
   out_3762712114619565501[12] = 0;
   out_3762712114619565501[13] = 0;
   out_3762712114619565501[14] = 0;
   out_3762712114619565501[15] = 0;
   out_3762712114619565501[16] = 0;
   out_3762712114619565501[17] = 0;
   out_3762712114619565501[18] = 0;
   out_3762712114619565501[19] = 0;
   out_3762712114619565501[20] = 0;
   out_3762712114619565501[21] = 0;
   out_3762712114619565501[22] = 0;
   out_3762712114619565501[23] = 0;
   out_3762712114619565501[24] = 0;
   out_3762712114619565501[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3762712114619565501[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3762712114619565501[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3762712114619565501[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3762712114619565501[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3762712114619565501[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3762712114619565501[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3762712114619565501[32] = 0;
   out_3762712114619565501[33] = 0;
   out_3762712114619565501[34] = 0;
   out_3762712114619565501[35] = 0;
   out_3762712114619565501[36] = 0;
   out_3762712114619565501[37] = 0;
   out_3762712114619565501[38] = 0;
   out_3762712114619565501[39] = 0;
   out_3762712114619565501[40] = 0;
   out_3762712114619565501[41] = 0;
   out_3762712114619565501[42] = 0;
   out_3762712114619565501[43] = 0;
   out_3762712114619565501[44] = 0;
   out_3762712114619565501[45] = 0;
   out_3762712114619565501[46] = 0;
   out_3762712114619565501[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3762712114619565501[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3762712114619565501[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3762712114619565501[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3762712114619565501[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3762712114619565501[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3762712114619565501[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3762712114619565501[54] = 0;
   out_3762712114619565501[55] = 0;
   out_3762712114619565501[56] = 0;
   out_3762712114619565501[57] = 0;
   out_3762712114619565501[58] = 0;
   out_3762712114619565501[59] = 0;
   out_3762712114619565501[60] = 0;
   out_3762712114619565501[61] = 0;
   out_3762712114619565501[62] = 0;
   out_3762712114619565501[63] = 0;
   out_3762712114619565501[64] = 0;
   out_3762712114619565501[65] = 0;
}
void h_14(double *state, double *unused, double *out_3358148432970012198) {
   out_3358148432970012198[0] = state[10];
   out_3358148432970012198[1] = state[11];
   out_3358148432970012198[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1804645181146609756) {
   out_1804645181146609756[0] = 0;
   out_1804645181146609756[1] = 0;
   out_1804645181146609756[2] = 0;
   out_1804645181146609756[3] = 0;
   out_1804645181146609756[4] = 0;
   out_1804645181146609756[5] = 0;
   out_1804645181146609756[6] = 0;
   out_1804645181146609756[7] = 0;
   out_1804645181146609756[8] = 0;
   out_1804645181146609756[9] = 0;
   out_1804645181146609756[10] = 1;
   out_1804645181146609756[11] = 0;
   out_1804645181146609756[12] = 0;
   out_1804645181146609756[13] = 0;
   out_1804645181146609756[14] = 0;
   out_1804645181146609756[15] = 0;
   out_1804645181146609756[16] = 0;
   out_1804645181146609756[17] = 0;
   out_1804645181146609756[18] = 0;
   out_1804645181146609756[19] = 0;
   out_1804645181146609756[20] = 0;
   out_1804645181146609756[21] = 0;
   out_1804645181146609756[22] = 0;
   out_1804645181146609756[23] = 0;
   out_1804645181146609756[24] = 0;
   out_1804645181146609756[25] = 0;
   out_1804645181146609756[26] = 0;
   out_1804645181146609756[27] = 0;
   out_1804645181146609756[28] = 0;
   out_1804645181146609756[29] = 0;
   out_1804645181146609756[30] = 0;
   out_1804645181146609756[31] = 0;
   out_1804645181146609756[32] = 0;
   out_1804645181146609756[33] = 1;
   out_1804645181146609756[34] = 0;
   out_1804645181146609756[35] = 0;
   out_1804645181146609756[36] = 0;
   out_1804645181146609756[37] = 0;
   out_1804645181146609756[38] = 0;
   out_1804645181146609756[39] = 0;
   out_1804645181146609756[40] = 0;
   out_1804645181146609756[41] = 0;
   out_1804645181146609756[42] = 0;
   out_1804645181146609756[43] = 0;
   out_1804645181146609756[44] = 0;
   out_1804645181146609756[45] = 0;
   out_1804645181146609756[46] = 0;
   out_1804645181146609756[47] = 0;
   out_1804645181146609756[48] = 0;
   out_1804645181146609756[49] = 0;
   out_1804645181146609756[50] = 0;
   out_1804645181146609756[51] = 0;
   out_1804645181146609756[52] = 0;
   out_1804645181146609756[53] = 0;
   out_1804645181146609756[54] = 0;
   out_1804645181146609756[55] = 0;
   out_1804645181146609756[56] = 1;
   out_1804645181146609756[57] = 0;
   out_1804645181146609756[58] = 0;
   out_1804645181146609756[59] = 0;
   out_1804645181146609756[60] = 0;
   out_1804645181146609756[61] = 0;
   out_1804645181146609756[62] = 0;
   out_1804645181146609756[63] = 0;
   out_1804645181146609756[64] = 0;
   out_1804645181146609756[65] = 0;
}
void h_33(double *state, double *unused, double *out_30279681972433378) {
   out_30279681972433378[0] = state[16];
   out_30279681972433378[1] = state[17];
   out_30279681972433378[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8080674596528484091) {
   out_8080674596528484091[0] = 0;
   out_8080674596528484091[1] = 0;
   out_8080674596528484091[2] = 0;
   out_8080674596528484091[3] = 0;
   out_8080674596528484091[4] = 0;
   out_8080674596528484091[5] = 0;
   out_8080674596528484091[6] = 0;
   out_8080674596528484091[7] = 0;
   out_8080674596528484091[8] = 0;
   out_8080674596528484091[9] = 0;
   out_8080674596528484091[10] = 0;
   out_8080674596528484091[11] = 0;
   out_8080674596528484091[12] = 0;
   out_8080674596528484091[13] = 0;
   out_8080674596528484091[14] = 0;
   out_8080674596528484091[15] = 0;
   out_8080674596528484091[16] = 1;
   out_8080674596528484091[17] = 0;
   out_8080674596528484091[18] = 0;
   out_8080674596528484091[19] = 0;
   out_8080674596528484091[20] = 0;
   out_8080674596528484091[21] = 0;
   out_8080674596528484091[22] = 0;
   out_8080674596528484091[23] = 0;
   out_8080674596528484091[24] = 0;
   out_8080674596528484091[25] = 0;
   out_8080674596528484091[26] = 0;
   out_8080674596528484091[27] = 0;
   out_8080674596528484091[28] = 0;
   out_8080674596528484091[29] = 0;
   out_8080674596528484091[30] = 0;
   out_8080674596528484091[31] = 0;
   out_8080674596528484091[32] = 0;
   out_8080674596528484091[33] = 0;
   out_8080674596528484091[34] = 0;
   out_8080674596528484091[35] = 0;
   out_8080674596528484091[36] = 0;
   out_8080674596528484091[37] = 0;
   out_8080674596528484091[38] = 0;
   out_8080674596528484091[39] = 1;
   out_8080674596528484091[40] = 0;
   out_8080674596528484091[41] = 0;
   out_8080674596528484091[42] = 0;
   out_8080674596528484091[43] = 0;
   out_8080674596528484091[44] = 0;
   out_8080674596528484091[45] = 0;
   out_8080674596528484091[46] = 0;
   out_8080674596528484091[47] = 0;
   out_8080674596528484091[48] = 0;
   out_8080674596528484091[49] = 0;
   out_8080674596528484091[50] = 0;
   out_8080674596528484091[51] = 0;
   out_8080674596528484091[52] = 0;
   out_8080674596528484091[53] = 0;
   out_8080674596528484091[54] = 0;
   out_8080674596528484091[55] = 0;
   out_8080674596528484091[56] = 0;
   out_8080674596528484091[57] = 0;
   out_8080674596528484091[58] = 0;
   out_8080674596528484091[59] = 0;
   out_8080674596528484091[60] = 0;
   out_8080674596528484091[61] = 0;
   out_8080674596528484091[62] = 1;
   out_8080674596528484091[63] = 0;
   out_8080674596528484091[64] = 0;
   out_8080674596528484091[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4936451531631853074) {
  H(in_vec, out_4936451531631853074);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1355019412731270491) {
  err_fun(nom_x, delta_x, out_1355019412731270491);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3724306521271248657) {
  inv_err_fun(nom_x, true_x, out_3724306521271248657);
}
void live_H_mod_fun(double *state, double *out_4479928638218003069) {
  H_mod_fun(state, out_4479928638218003069);
}
void live_f_fun(double *state, double dt, double *out_262283035690484694) {
  f_fun(state,  dt, out_262283035690484694);
}
void live_F_fun(double *state, double dt, double *out_1325286187468660998) {
  F_fun(state,  dt, out_1325286187468660998);
}
void live_h_4(double *state, double *unused, double *out_7413195925170192470) {
  h_4(state, unused, out_7413195925170192470);
}
void live_H_4(double *state, double *unused, double *out_5482573754117837714) {
  H_4(state, unused, out_5482573754117837714);
}
void live_h_9(double *state, double *unused, double *out_3358148432970012198) {
  h_9(state, unused, out_3358148432970012198);
}
void live_H_9(double *state, double *unused, double *out_1804645181146609756) {
  H_9(state, unused, out_1804645181146609756);
}
void live_h_10(double *state, double *unused, double *out_8120918261206966651) {
  h_10(state, unused, out_8120918261206966651);
}
void live_H_10(double *state, double *unused, double *out_5268034709010358343) {
  H_10(state, unused, out_5268034709010358343);
}
void live_h_12(double *state, double *unused, double *out_3031181799664214664) {
  h_12(state, unused, out_3031181799664214664);
}
void live_H_12(double *state, double *unused, double *out_6582911942548980906) {
  H_12(state, unused, out_6582911942548980906);
}
void live_h_35(double *state, double *unused, double *out_8689434747193440267) {
  h_35(state, unused, out_8689434747193440267);
}
void live_H_35(double *state, double *unused, double *out_2115911696745230338) {
  H_35(state, unused, out_2115911696745230338);
}
void live_h_32(double *state, double *unused, double *out_4425036595514927008) {
  h_32(state, unused, out_4425036595514927008);
}
void live_H_32(double *state, double *unused, double *out_3760751206456129940) {
  H_32(state, unused, out_3760751206456129940);
}
void live_h_13(double *state, double *unused, double *out_6572175830757283971) {
  h_13(state, unused, out_6572175830757283971);
}
void live_H_13(double *state, double *unused, double *out_3762712114619565501) {
  H_13(state, unused, out_3762712114619565501);
}
void live_h_14(double *state, double *unused, double *out_3358148432970012198) {
  h_14(state, unused, out_3358148432970012198);
}
void live_H_14(double *state, double *unused, double *out_1804645181146609756) {
  H_14(state, unused, out_1804645181146609756);
}
void live_h_33(double *state, double *unused, double *out_30279681972433378) {
  h_33(state, unused, out_30279681972433378);
}
void live_H_33(double *state, double *unused, double *out_8080674596528484091) {
  H_33(state, unused, out_8080674596528484091);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
